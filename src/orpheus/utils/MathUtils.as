package orpheus.utils {	/**	 * MZ Package 1.0	 * @author INEX	 */	public class MathUtils 	{		//2^n 근사치 연산		public static function squareAppValue(data:Number, target:Number = 2):Number		{			if (Math.abs(data) > target)			{				return MathUtils.squareAppValue(data, target * 2);			}			else			{				return target;			}		}		//n의 배수 근사치 연산  		//multipleRound(10, 8) = 8		//multipleRound(15, 8) = 16		public static function multipleRound(num:Number, multiple:Number):Number		{			var ease:Number = num % multiple;			num += (ease < multiple * .5) ? -ease : multiple - ease;			return num; 		}		public static function toDeg( rad:Number ):Number		{			return rad / Math.PI * 180;		}				public static function toRad( deg:Number ):Number		{			return deg / 180 * Math.PI;		}				public static function changeTime( timeNum:Number ):Array{			var timeAry: Array= [];			var hrs:uint;			var mins:uint;			var secs:uint;			var ms:uint;			var msAfterHrs:uint = timeNum % ((1000 * 60) * 60);			hrs = (timeNum - msAfterHrs) / ((1000 * 60) * 60);						var msAfterMins:uint = msAfterHrs % (1000 * 60);			mins = (msAfterHrs - msAfterMins) / (1000 * 60);						var msAfterSecs:uint = msAfterMins % 1000;			secs = (msAfterMins - msAfterSecs) / 1000;						ms = msAfterSecs;						if (ms == 100) {				ms = 0;			}				var hrs2:String = (hrs<10)?"0"+hrs:String(hrs);			var mins2:String = (mins<10)?"0"+mins:String(mins);			var secs2:String = (secs<10)?"0"+secs:String(secs);			var ms2:int = Math.floor(ms*.1);			timeAry[0]=hrs2;			timeAry[1]=mins2;			timeAry[2]=secs2;			timeAry[3]=String(ms2);			return timeAry;		}		public static function getRandomList(pList:Array):Array 		{ 			var pLength:int = pList.length			var kList:Array = []; 			for (var i:uint = 0; i < pLength; i++) 			{ 				var kRandom:int = int(Math.random() * pList.length); 				var kOne:Object = pList[kRandom]; 				kList.push(kOne); 				pList.splice(kRandom, 1); 			} 			return kList; 		} 		public static function makeRandomList(num:int):Array{			var ary:Array = [];			for (var i:int = 0; i < num; i++) 
			{
				ary.push(i);
			}
			ary = getRandomList(ary);			return ary;		}	}}